<_start>:
xor    %ebp,%ebp
mov    %rdx,%r9
pop    %rsi
mov    %rsp,%rdx
and    $0xfffffffffffffff0,%rsp
push   %rax
push   %rsp
mov    $0x400ba0,%r8
mov    $0x400b30,%rcx
mov    $0x400a19,%rdi
callq  4006d0 <__libc_start_main@plt>
hlt    
nopw   0x0(%rax,%rax,1)
<deregister_tm_clones>:
mov    $0x601067,%eax
push   %rbp
sub    $0x601060,%rax
cmp    $0xe,%rax
mov    %rsp,%rbp
jbe    400790 <deregister_tm_clones+0x30>
mov    $0x0,%eax
test   %rax,%rax
je     400790 <deregister_tm_clones+0x30>
pop    %rbp
mov    $0x601060,%edi
jmpq   *%rax
nopw   0x0(%rax,%rax,1)
pop    %rbp
retq   
nopl   0x0(%rax)
nopw   %cs:0x0(%rax,%rax,1)
<register_tm_clones>:
mov    $0x601060,%esi
push   %rbp
sub    $0x601060,%rsi
sar    $0x3,%rsi
mov    %rsp,%rbp
mov    %rsi,%rax
shr    $0x3f,%rax
add    %rax,%rsi
sar    %rsi
je     4007d8 <register_tm_clones+0x38>
mov    $0x0,%eax
test   %rax,%rax
je     4007d8 <register_tm_clones+0x38>
pop    %rbp
mov    $0x601060,%edi
jmpq   *%rax
nopl   (%rax)
pop    %rbp
retq   
nopw   0x0(%rax,%rax,1)
<__do_global_dtors_aux>:
cmpb   $0x0,0x200989(%rip)        
jne    4007fa <__do_global_dtors_aux+0x1a>
push   %rbp
mov    %rsp,%rbp
callq  400760 <deregister_tm_clones>
pop    %rbp
movb   $0x1,0x200976(%rip)        
repz retq 
nopl   0x0(%rax)
<frame_dummy>:
mov    $0x600e10,%edi
cmpq   $0x0,(%rdi)
jne    400810 <frame_dummy+0x10>
jmp    4007a0 <register_tm_clones>
nopl   (%rax)
mov    $0x0,%eax
test   %rax,%rax
je     40080b <frame_dummy+0xb>
push   %rbp
mov    %rsp,%rbp
callq  *%rax
pop    %rbp
jmpq   4007a0 <register_tm_clones>
<_Z7heapifyPiii>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdi,-0x18(%rbp)
mov    %esi,-0x1c(%rbp)
mov    %edx,-0x20(%rbp)
mov    -0x20(%rbp),%eax
mov    %eax,-0xc(%rbp)
mov    -0x20(%rbp),%eax
add    %eax,%eax
add    $0x1,%eax
mov    %eax,-0x8(%rbp)
mov    -0x20(%rbp),%eax
add    $0x1,%eax
add    %eax,%eax
mov    %eax,-0x4(%rbp)
mov    -0x8(%rbp),%eax
cmp    -0x1c(%rbp),%eax
jge    400892 <_Z7heapifyPiii+0x6c>
mov    -0x8(%rbp),%eax
cltq   
lea    0x0(,%rax,4),%rdx
mov    -0x18(%rbp),%rax
add    %rdx,%rax
mov    (%rax),%edx
mov    -0xc(%rbp),%eax
cltq   
lea    0x0(,%rax,4),%rcx
mov    -0x18(%rbp),%rax
add    %rcx,%rax
mov    (%rax),%eax
cmp    %eax,%edx
jle    400892 <_Z7heapifyPiii+0x6c>
mov    -0x8(%rbp),%eax
mov    %eax,-0xc(%rbp)
mov    -0x4(%rbp),%eax
cmp    -0x1c(%rbp),%eax
jge    4008d0 <_Z7heapifyPiii+0xaa>
mov    -0x4(%rbp),%eax
cltq   
lea    0x0(,%rax,4),%rdx
mov    -0x18(%rbp),%rax
add    %rdx,%rax
mov    (%rax),%edx
mov    -0xc(%rbp),%eax
cltq   
lea    0x0(,%rax,4),%rcx
mov    -0x18(%rbp),%rax
add    %rcx,%rax
mov    (%rax),%eax
cmp    %eax,%edx
jle    4008d0 <_Z7heapifyPiii+0xaa>
mov    -0x4(%rbp),%eax
mov    %eax,-0xc(%rbp)
mov    -0xc(%rbp),%eax
cmp    -0x20(%rbp),%eax
je     40091f <_Z7heapifyPiii+0xf9>
mov    -0xc(%rbp),%eax
cltq   
lea    0x0(,%rax,4),%rdx
mov    -0x18(%rbp),%rax
add    %rax,%rdx
mov    -0x20(%rbp),%eax
cltq   
lea    0x0(,%rax,4),%rcx
mov    -0x18(%rbp),%rax
add    %rcx,%rax
mov    %rdx,%rsi
mov    %rax,%rdi
callq  400b01 <_ZSt4swapIiEvRT_S1_>
mov    -0xc(%rbp),%edx
mov    -0x1c(%rbp),%ecx
mov    -0x18(%rbp),%rax
mov    %ecx,%esi
mov    %rax,%rdi
callq  400826 <_Z7heapifyPiii>
nop
leaveq 
retq   
<_Z8heapSortPii>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdi,-0x18(%rbp)
mov    %esi,-0x1c(%rbp)
mov    -0x1c(%rbp),%eax
mov    %eax,%edx
shr    $0x1f,%edx
add    %edx,%eax
sar    %eax
sub    $0x1,%eax
mov    %eax,-0x8(%rbp)
cmpl   $0x0,-0x8(%rbp)
js     400963 <_Z8heapSortPii+0x41>
mov    -0x8(%rbp),%edx
mov    -0x1c(%rbp),%ecx
mov    -0x18(%rbp),%rax
mov    %ecx,%esi
mov    %rax,%rdi
callq  400826 <_Z7heapifyPiii>
subl   $0x1,-0x8(%rbp)
jmp    400943 <_Z8heapSortPii+0x21>
mov    -0x1c(%rbp),%eax
sub    $0x1,%eax
mov    %eax,-0x4(%rbp)
cmpl   $0x0,-0x4(%rbp)
js     4009b1 <_Z8heapSortPii+0x8f>
mov    -0x4(%rbp),%eax
cltq   
lea    0x0(,%rax,4),%rdx
mov    -0x18(%rbp),%rax
add    %rax,%rdx
mov    -0x18(%rbp),%rax
mov    %rdx,%rsi
mov    %rax,%rdi
callq  400b01 <_ZSt4swapIiEvRT_S1_>
mov    -0x4(%rbp),%ecx
mov    -0x18(%rbp),%rax
mov    $0x0,%edx
mov    %ecx,%esi
mov    %rax,%rdi
callq  400826 <_Z7heapifyPiii>
subl   $0x1,-0x4(%rbp)
jmp    40096c <_Z8heapSortPii+0x4a>
nop
leaveq 
retq   
<_Z10printArrayPii>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdi,-0x18(%rbp)
mov    %esi,-0x1c(%rbp)
movl   $0x0,-0x4(%rbp)
mov    -0x4(%rbp),%eax
cmp    -0x1c(%rbp),%eax
jge    400a07 <_Z10printArrayPii+0x53>
mov    -0x4(%rbp),%eax
cltq   
lea    0x0(,%rax,4),%rdx
mov    -0x18(%rbp),%rax
add    %rdx,%rax
mov    (%rax),%eax
mov    %eax,%esi
mov    $0x601060,%edi
callq  4006b0 <_ZNSolsEi@plt>
mov    $0x400bb4,%esi
mov    %rax,%rdi
callq  400700 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
addl   $0x1,-0x4(%rbp)
jmp    4009ca <_Z10printArrayPii+0x16>
mov    $0x400bb6,%esi
mov    $0x601060,%edi
callq  400700 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
nop
leaveq 
retq   
<main>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %fs:0x28,%rax
mov    %rax,-0x8(%rbp)
xor    %eax,%eax
movl   $0xc,-0x20(%rbp)
movl   $0xb,-0x1c(%rbp)
movl   $0xd,-0x18(%rbp)
movl   $0x5,-0x14(%rbp)
movl   $0x6,-0x10(%rbp)
movl   $0x7,-0xc(%rbp)
mov    $0x6,%eax
mov    %eax,-0x24(%rbp)
mov    -0x24(%rbp),%edx
lea    -0x20(%rbp),%rax
mov    %edx,%esi
mov    %rax,%rdi
callq  400922 <_Z8heapSortPii>
mov    $0x400bb8,%esi
mov    $0x601060,%edi
callq  400700 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
mov    -0x24(%rbp),%edx
lea    -0x20(%rbp),%rax
mov    %edx,%esi
mov    %rax,%rdi
callq  4009b4 <_Z10printArrayPii>
mov    $0x0,%eax
mov    -0x8(%rbp),%rcx
xor    %fs:0x28,%rcx
je     400aac <main+0x93>
callq  400710 <__stack_chk_fail@plt>
leaveq 
retq   
<_Z41__static_initialization_and_destruction_0ii>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %edi,-0x4(%rbp)
mov    %esi,-0x8(%rbp)
cmpl   $0x1,-0x4(%rbp)
jne    400ae9 <_Z41__static_initialization_and_destruction_0ii+0x3b>
cmpl   $0xffff,-0x8(%rbp)
jne    400ae9 <_Z41__static_initialization_and_destruction_0ii+0x3b>
mov    $0x601171,%edi
callq  4006c0 <_ZNSt8ios_base4InitC1Ev@plt>
mov    $0x601058,%edx
mov    $0x601171,%esi
mov    $0x4006f0,%edi
callq  4006e0 <__cxa_atexit@plt>
nop
leaveq 
retq   
<_GLOBAL__sub_I__Z7heapifyPiii>:
push   %rbp
mov    %rsp,%rbp
mov    $0xffff,%esi
mov    $0x1,%edi
callq  400aae <_Z41__static_initialization_and_destruction_0ii>
pop    %rbp
retq   
<_ZSt4swapIiEvRT_S1_>:
push   %rbp
mov    %rsp,%rbp
mov    %rdi,-0x18(%rbp)
mov    %rsi,-0x20(%rbp)
mov    -0x18(%rbp),%rax
mov    (%rax),%eax
mov    %eax,-0x4(%rbp)
mov    -0x20(%rbp),%rax
mov    (%rax),%edx
mov    -0x18(%rbp),%rax
mov    %edx,(%rax)
mov    -0x20(%rbp),%rax
mov    -0x4(%rbp),%edx
mov    %edx,(%rax)
nop
pop    %rbp
retq   
xchg   %ax,%ax
<__libc_csu_init>:
push   %r15
push   %r14
mov    %edi,%r15d
push   %r13
push   %r12
lea    0x2002b6(%rip),%r12        
push   %rbp
lea    0x2002be(%rip),%rbp        
push   %rbx
mov    %rsi,%r14
mov    %rdx,%r13
sub    %r12,%rbp
sub    $0x8,%rsp
sar    $0x3,%rbp
callq  400680 <_init>
test   %rbp,%rbp
je     400b86 <__libc_csu_init+0x56>
xor    %ebx,%ebx
nopl   0x0(%rax,%rax,1)
mov    %r13,%rdx
mov    %r14,%rsi
mov    %r15d,%edi
callq  *(%r12,%rbx,8)
add    $0x1,%rbx
cmp    %rbp,%rbx
jne    400b70 <__libc_csu_init+0x40>
add    $0x8,%rsp
pop    %rbx
pop    %rbp
pop    %r12
pop    %r13
pop    %r14
pop    %r15
retq   
nop
nopw   %cs:0x0(%rax,%rax,1)
<__libc_csu_fini>:
repz retq 
