<_start>:
xor    %ebp,%ebp
mov    %rdx,%r9
pop    %rsi
mov    %rsp,%rdx
and    $0xfffffffffffffff0,%rsp
push   %rax
push   %rsp
lea    0x36a(%rip),%r8        
lea    0x2f3(%rip),%rcx        
lea    0x209(%rip),%rdi        
callq  *0x200806(%rip)        
hlt    
nopl   0x0(%rax,%rax,1)
<deregister_tm_clones>:
lea    0x200829(%rip),%rdi        
push   %rbp
lea    0x200821(%rip),%rax        
cmp    %rdi,%rax
mov    %rsp,%rbp
je     810 <deregister_tm_clones+0x30>
mov    0x2007da(%rip),%rax        
test   %rax,%rax
je     810 <deregister_tm_clones+0x30>
pop    %rbp
jmpq   *%rax
nopw   %cs:0x0(%rax,%rax,1)
pop    %rbp
retq   
nopl   0x0(%rax)
nopw   %cs:0x0(%rax,%rax,1)
<register_tm_clones>:
lea    0x2007e9(%rip),%rdi        
lea    0x2007e2(%rip),%rsi        
push   %rbp
sub    %rdi,%rsi
mov    %rsp,%rbp
sar    $0x3,%rsi
mov    %rsi,%rax
shr    $0x3f,%rax
add    %rax,%rsi
sar    %rsi
je     860 <register_tm_clones+0x40>
mov    0x2007a1(%rip),%rax        
test   %rax,%rax
je     860 <register_tm_clones+0x40>
pop    %rbp
jmpq   *%rax
nopw   0x0(%rax,%rax,1)
pop    %rbp
retq   
nopl   0x0(%rax)
nopw   %cs:0x0(%rax,%rax,1)
<__do_global_dtors_aux>:
cmpb   $0x0,0x2008b9(%rip)        
jne    8a8 <__do_global_dtors_aux+0x38>
cmpq   $0x0,0x20074f(%rip)        
push   %rbp
mov    %rsp,%rbp
je     893 <__do_global_dtors_aux+0x23>
mov    0x20077a(%rip),%rdi        
callq  7a0 <__cxa_finalize@plt>
callq  7e0 <deregister_tm_clones>
movb   $0x1,0x200891(%rip)        
pop    %rbp
retq   
nopl   0x0(%rax)
repz retq 
nopw   0x0(%rax,%rax,1)
<frame_dummy>:
push   %rbp
mov    %rsp,%rbp
pop    %rbp
jmpq   820 <register_tm_clones>
<_Z22insertionSortRecursivePii>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdi,-0x18(%rbp)
mov    %esi,-0x1c(%rbp)
cmpl   $0x1,-0x1c(%rbp)
jle    980 <_Z22insertionSortRecursivePii+0xc6>
mov    -0x1c(%rbp),%eax
lea    -0x1(%rax),%edx
mov    -0x18(%rbp),%rax
mov    %edx,%esi
mov    %rax,%rdi
callq  8ba <_Z22insertionSortRecursivePii>
mov    -0x1c(%rbp),%eax
cltq   
shl    $0x2,%rax
lea    -0x4(%rax),%rdx
mov    -0x18(%rbp),%rax
add    %rdx,%rax
mov    (%rax),%eax
mov    %eax,-0x4(%rbp)
mov    -0x1c(%rbp),%eax
sub    $0x2,%eax
mov    %eax,-0x8(%rbp)
cmpl   $0x0,-0x8(%rbp)
js     961 <_Z22insertionSortRecursivePii+0xa7>
mov    -0x8(%rbp),%eax
cltq   
lea    0x0(,%rax,4),%rdx
mov    -0x18(%rbp),%rax
add    %rdx,%rax
mov    (%rax),%eax
cmp    %eax,-0x4(%rbp)
jge    961 <_Z22insertionSortRecursivePii+0xa7>
mov    -0x8(%rbp),%eax
cltq   
lea    0x0(,%rax,4),%rdx
mov    -0x18(%rbp),%rax
add    %rdx,%rax
mov    -0x8(%rbp),%edx
movslq %edx,%rdx
add    $0x1,%rdx
lea    0x0(,%rdx,4),%rcx
mov    -0x18(%rbp),%rdx
add    %rcx,%rdx
mov    (%rax),%eax
mov    %eax,(%rdx)
subl   $0x1,-0x8(%rbp)
jmp    909 <_Z22insertionSortRecursivePii+0x4f>
mov    -0x8(%rbp),%eax
cltq   
add    $0x1,%rax
lea    0x0(,%rax,4),%rdx
mov    -0x18(%rbp),%rax
add    %rax,%rdx
mov    -0x4(%rbp),%eax
mov    %eax,(%rdx)
jmp    981 <_Z22insertionSortRecursivePii+0xc7>
nop
leaveq 
retq   
<_Z10printArrayPii>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdi,-0x18(%rbp)
mov    %esi,-0x1c(%rbp)
movl   $0x0,-0x4(%rbp)
mov    -0x4(%rbp),%eax
cmp    -0x1c(%rbp),%eax
jge    9da <_Z10printArrayPii+0x57>
mov    -0x4(%rbp),%eax
cltq   
lea    0x0(,%rax,4),%rdx
mov    -0x18(%rbp),%rax
add    %rdx,%rax
mov    (%rax),%eax
mov    %eax,%esi
lea    0x200660(%rip),%rdi        
callq  790 <_ZNSolsEi@plt>
lea    0x179(%rip),%rsi        
mov    %rax,%rdi
callq  760 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
addl   $0x1,-0x4(%rbp)
jmp    999 <_Z10printArrayPii+0x16>
nop
leaveq 
retq   
<main>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %fs:0x28,%rax
mov    %rax,-0x8(%rbp)
xor    %eax,%eax
movl   $0xc,-0x20(%rbp)
movl   $0xb,-0x1c(%rbp)
movl   $0xd,-0x18(%rbp)
movl   $0x5,-0x14(%rbp)
movl   $0x6,-0x10(%rbp)
movl   $0x5,-0x24(%rbp)
mov    -0x24(%rbp),%edx
lea    -0x20(%rbp),%rax
mov    %edx,%esi
mov    %rax,%rdi
callq  8ba <_Z22insertionSortRecursivePii>
mov    -0x24(%rbp),%edx
lea    -0x20(%rbp),%rax
mov    %edx,%esi
mov    %rax,%rdi
callq  983 <_Z10printArrayPii>
mov    $0x0,%eax
mov    -0x8(%rbp),%rcx
xor    %fs:0x28,%rcx
je     a59 <main+0x7c>
callq  770 <__stack_chk_fail@plt>
leaveq 
retq   
<_Z41__static_initialization_and_destruction_0ii>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %edi,-0x4(%rbp)
mov    %esi,-0x8(%rbp)
cmpl   $0x1,-0x4(%rbp)
jne    aa1 <_Z41__static_initialization_and_destruction_0ii+0x46>
cmpl   $0xffff,-0x8(%rbp)
jne    aa1 <_Z41__static_initialization_and_destruction_0ii+0x46>
lea    0x2006b2(%rip),%rdi        
callq  780 <_ZNSt8ios_base4InitC1Ev@plt>
lea    0x20057d(%rip),%rdx        
lea    0x20069f(%rip),%rsi        
mov    0x20055f(%rip),%rax        
mov    %rax,%rdi
callq  750 <__cxa_atexit@plt>
nop
leaveq 
retq   
<_GLOBAL__sub_I__Z22insertionSortRecursivePii>:
push   %rbp
mov    %rsp,%rbp
mov    $0xffff,%esi
mov    $0x1,%edi
callq  a5b <_Z41__static_initialization_and_destruction_0ii>
pop    %rbp
retq   
nopl   0x0(%rax)
<__libc_csu_init>:
push   %r15
push   %r14
mov    %rdx,%r15
push   %r13
push   %r12
lea    0x2002a6(%rip),%r12        
push   %rbp
lea    0x2002ae(%rip),%rbp        
push   %rbx
mov    %edi,%r13d
mov    %rsi,%r14
sub    %r12,%rbp
sub    $0x8,%rsp
sar    $0x3,%rbp
callq  720 <_init>
test   %rbp,%rbp
je     b16 <__libc_csu_init+0x56>
xor    %ebx,%ebx
nopl   0x0(%rax,%rax,1)
mov    %r15,%rdx
mov    %r14,%rsi
mov    %r13d,%edi
callq  *(%r12,%rbx,8)
add    $0x1,%rbx
cmp    %rbx,%rbp
jne    b00 <__libc_csu_init+0x40>
add    $0x8,%rsp
pop    %rbx
pop    %rbp
pop    %r12
pop    %r13
pop    %r14
pop    %r15
retq   
nop
nopw   %cs:0x0(%rax,%rax,1)
<__libc_csu_fini>:
repz retq 
