<_start>:
xor    %ebp,%ebp
mov    %rdx,%r9
pop    %rsi
mov    %rsp,%rdx
and    $0xfffffffffffffff0,%rsp
push   %rax
push   %rsp
mov    $0x400850,%r8
mov    $0x4007e0,%rcx
mov    $0x4006e7,%rdi
callq  400480 <__libc_start_main@plt>
hlt    
nopw   0x0(%rax,%rax,1)
<deregister_tm_clones>:
mov    $0x601047,%eax
push   %rbp
sub    $0x601040,%rax
cmp    $0xe,%rax
mov    %rsp,%rbp
jbe    400500 <deregister_tm_clones+0x30>
mov    $0x0,%eax
test   %rax,%rax
je     400500 <deregister_tm_clones+0x30>
pop    %rbp
mov    $0x601040,%edi
jmpq   *%rax
nopw   0x0(%rax,%rax,1)
pop    %rbp
retq   
nopl   0x0(%rax)
nopw   %cs:0x0(%rax,%rax,1)
<register_tm_clones>:
mov    $0x601040,%esi
push   %rbp
sub    $0x601040,%rsi
sar    $0x3,%rsi
mov    %rsp,%rbp
mov    %rsi,%rax
shr    $0x3f,%rax
add    %rax,%rsi
sar    %rsi
je     400548 <register_tm_clones+0x38>
mov    $0x0,%eax
test   %rax,%rax
je     400548 <register_tm_clones+0x38>
pop    %rbp
mov    $0x601040,%edi
jmpq   *%rax
nopl   (%rax)
pop    %rbp
retq   
nopw   0x0(%rax,%rax,1)
<__do_global_dtors_aux>:
cmpb   $0x0,0x200ae9(%rip)        
jne    40056a <__do_global_dtors_aux+0x1a>
push   %rbp
mov    %rsp,%rbp
callq  4004d0 <deregister_tm_clones>
pop    %rbp
movb   $0x1,0x200ad6(%rip)        
repz retq 
nopl   0x0(%rax)
<frame_dummy>:
mov    $0x600e20,%edi
cmpq   $0x0,(%rdi)
jne    400580 <frame_dummy+0x10>
jmp    400510 <register_tm_clones>
nopl   (%rax)
mov    $0x0,%eax
test   %rax,%rax
je     40057b <frame_dummy+0xb>
push   %rbp
mov    %rsp,%rbp
callq  *%rax
pop    %rbp
jmpq   400510 <register_tm_clones>
<_Z19interpolationSearchPiii>:
push   %rbp
mov    %rsp,%rbp
mov    %rdi,-0x18(%rbp)
mov    %esi,-0x1c(%rbp)
mov    %edx,-0x20(%rbp)
movl   $0x0,-0xc(%rbp)
mov    -0x1c(%rbp),%eax
sub    $0x1,%eax
mov    %eax,-0x8(%rbp)
mov    -0xc(%rbp),%eax
cmp    -0x8(%rbp),%eax
jg     4006e0 <_Z19interpolationSearchPiii+0x14a>
mov    -0xc(%rbp),%eax
cltq   
lea    0x0(,%rax,4),%rdx
mov    -0x18(%rbp),%rax
add    %rdx,%rax
mov    (%rax),%eax
cmp    -0x20(%rbp),%eax
jg     4006e0 <_Z19interpolationSearchPiii+0x14a>
mov    -0x8(%rbp),%eax
cltq   
lea    0x0(,%rax,4),%rdx
mov    -0x18(%rbp),%rax
add    %rdx,%rax
mov    (%rax),%eax
cmp    -0x20(%rbp),%eax
jl     4006e0 <_Z19interpolationSearchPiii+0x14a>
pxor   %xmm1,%xmm1
cvtsi2sdl -0xc(%rbp),%xmm1
mov    -0x8(%rbp),%eax
sub    -0xc(%rbp),%eax
pxor   %xmm0,%xmm0
cvtsi2sd %eax,%xmm0
mov    -0x8(%rbp),%eax
cltq   
lea    0x0(,%rax,4),%rdx
mov    -0x18(%rbp),%rax
add    %rdx,%rax
mov    (%rax),%edx
mov    -0xc(%rbp),%eax
cltq   
lea    0x0(,%rax,4),%rcx
mov    -0x18(%rbp),%rax
add    %rcx,%rax
mov    (%rax),%eax
sub    %eax,%edx
mov    %edx,%eax
pxor   %xmm2,%xmm2
cvtsi2sd %eax,%xmm2
divsd  %xmm2,%xmm0
movapd %xmm0,%xmm2
mov    -0xc(%rbp),%eax
cltq   
lea    0x0(,%rax,4),%rdx
mov    -0x18(%rbp),%rax
add    %rdx,%rax
mov    (%rax),%eax
mov    -0x20(%rbp),%edx
sub    %eax,%edx
mov    %edx,%eax
pxor   %xmm0,%xmm0
cvtsi2sd %eax,%xmm0
mulsd  %xmm2,%xmm0
addsd  %xmm1,%xmm0
cvttsd2si %xmm0,%eax
mov    %eax,-0x4(%rbp)
mov    -0x4(%rbp),%eax
cltq   
lea    0x0(,%rax,4),%rdx
mov    -0x18(%rbp),%rax
add    %rdx,%rax
mov    (%rax),%eax
cmp    -0x20(%rbp),%eax
jne    4006a9 <_Z19interpolationSearchPiii+0x113>
mov    -0x4(%rbp),%eax
jmp    4006e5 <_Z19interpolationSearchPiii+0x14f>
mov    -0x4(%rbp),%eax
cltq   
lea    0x0(,%rax,4),%rdx
mov    -0x18(%rbp),%rax
add    %rdx,%rax
mov    (%rax),%eax
cmp    -0x20(%rbp),%eax
jge    4006d2 <_Z19interpolationSearchPiii+0x13c>
mov    -0x4(%rbp),%eax
add    $0x1,%eax
mov    %eax,-0xc(%rbp)
jmpq   4005b4 <_Z19interpolationSearchPiii+0x1e>
mov    -0x4(%rbp),%eax
sub    $0x1,%eax
mov    %eax,-0x8(%rbp)
jmpq   4005b4 <_Z19interpolationSearchPiii+0x1e>
mov    $0xffffffff,%eax
pop    %rbp
retq   
<main>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
mov    %fs:0x28,%rax
mov    %rax,-0x8(%rbp)
xor    %eax,%eax
movl   $0xa,-0x50(%rbp)
movl   $0xc,-0x4c(%rbp)
movl   $0xd,-0x48(%rbp)
movl   $0x10,-0x44(%rbp)
movl   $0x12,-0x40(%rbp)
movl   $0x13,-0x3c(%rbp)
movl   $0x14,-0x38(%rbp)
movl   $0x15,-0x34(%rbp)
movl   $0x16,-0x30(%rbp)
movl   $0x17,-0x2c(%rbp)
movl   $0x18,-0x28(%rbp)
movl   $0x21,-0x24(%rbp)
movl   $0x23,-0x20(%rbp)
movl   $0x2a,-0x1c(%rbp)
movl   $0x2f,-0x18(%rbp)
mov    $0xf,%eax
mov    %eax,-0x5c(%rbp)
movl   $0x12,-0x58(%rbp)
mov    -0x58(%rbp),%edx
mov    -0x5c(%rbp),%ecx
lea    -0x50(%rbp),%rax
mov    %ecx,%esi
mov    %rax,%rdi
callq  400596 <_Z19interpolationSearchPiii>
mov    %eax,-0x54(%rbp)
cmpl   $0xffffffff,-0x54(%rbp)
je     4007a9 <main+0xc2>
mov    -0x54(%rbp),%eax
mov    %eax,%esi
mov    $0x400864,%edi
mov    $0x0,%eax
callq  400470 <printf@plt>
jmp    4007b8 <main+0xd1>
mov    $0x40087e,%edi
mov    $0x0,%eax
callq  400470 <printf@plt>
mov    $0x0,%eax
mov    -0x8(%rbp),%rcx
xor    %fs:0x28,%rcx
je     4007d1 <main+0xea>
callq  400460 <__stack_chk_fail@plt>
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nopl   (%rax)
<__libc_csu_init>:
push   %r15
push   %r14
mov    %edi,%r15d
push   %r13
push   %r12
lea    0x20061e(%rip),%r12        
push   %rbp
lea    0x20061e(%rip),%rbp        
push   %rbx
mov    %rsi,%r14
mov    %rdx,%r13
sub    %r12,%rbp
sub    $0x8,%rsp
sar    $0x3,%rbp
callq  400428 <_init>
test   %rbp,%rbp
je     400836 <__libc_csu_init+0x56>
xor    %ebx,%ebx
nopl   0x0(%rax,%rax,1)
mov    %r13,%rdx
mov    %r14,%rsi
mov    %r15d,%edi
callq  *(%r12,%rbx,8)
add    $0x1,%rbx
cmp    %rbp,%rbx
jne    400820 <__libc_csu_init+0x40>
add    $0x8,%rsp
pop    %rbx
pop    %rbp
pop    %r12
pop    %r13
pop    %r14
pop    %r15
retq   
nop
nopw   %cs:0x0(%rax,%rax,1)
<__libc_csu_fini>:
repz retq 
