<_start>:
xor    %ebp,%ebp
mov    %rdx,%r9
pop    %rsi
mov    %rsp,%rdx
and    $0xfffffffffffffff0,%rsp
push   %rax
push   %rsp
mov    $0x400bc0,%r8
mov    $0x400b50,%rcx
mov    $0x4009c6,%rdi
callq  400730 <__libc_start_main@plt>
hlt    
nopw   0x0(%rax,%rax,1)
<deregister_tm_clones>:
mov    $0x60106f,%eax
push   %rbp
sub    $0x601068,%rax
cmp    $0xe,%rax
mov    %rsp,%rbp
jbe    400800 <deregister_tm_clones+0x30>
mov    $0x0,%eax
test   %rax,%rax
je     400800 <deregister_tm_clones+0x30>
pop    %rbp
mov    $0x601068,%edi
jmpq   *%rax
nopw   0x0(%rax,%rax,1)
pop    %rbp
retq   
nopl   0x0(%rax)
nopw   %cs:0x0(%rax,%rax,1)
<register_tm_clones>:
mov    $0x601068,%esi
push   %rbp
sub    $0x601068,%rsi
sar    $0x3,%rsi
mov    %rsp,%rbp
mov    %rsi,%rax
shr    $0x3f,%rax
add    %rax,%rsi
sar    %rsi
je     400848 <register_tm_clones+0x38>
mov    $0x0,%eax
test   %rax,%rax
je     400848 <register_tm_clones+0x38>
pop    %rbp
mov    $0x601068,%edi
jmpq   *%rax
nopl   (%rax)
pop    %rbp
retq   
nopw   0x0(%rax,%rax,1)
<__do_global_dtors_aux>:
cmpb   $0x0,0x200939(%rip)        
jne    40086a <__do_global_dtors_aux+0x1a>
push   %rbp
mov    %rsp,%rbp
callq  4007d0 <deregister_tm_clones>
pop    %rbp
movb   $0x1,0x200926(%rip)        
repz retq 
nopl   0x0(%rax)
<frame_dummy>:
mov    $0x600e00,%edi
cmpq   $0x0,(%rdi)
jne    400880 <frame_dummy+0x10>
jmp    400810 <register_tm_clones>
nopl   (%rax)
mov    $0x0,%eax
test   %rax,%rax
je     40087b <frame_dummy+0xb>
push   %rbp
mov    %rsp,%rbp
callq  *%rax
pop    %rbp
jmpq   400810 <register_tm_clones>
<_Z10jumpSearchPiii>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdi,-0x18(%rbp)
mov    %esi,-0x1c(%rbp)
mov    %edx,-0x20(%rbp)
mov    %fs:0x28,%rax
mov    %rax,-0x8(%rbp)
xor    %eax,%eax
mov    -0x20(%rbp),%eax
pxor   %xmm0,%xmm0
cvtsi2sd %eax,%xmm0
callq  400780 <sqrt@plt>
cvttsd2si %xmm0,%eax
mov    %eax,-0x10(%rbp)
movl   $0x0,-0xc(%rbp)
lea    -0x20(%rbp),%rdx
lea    -0x10(%rbp),%rax
mov    %rdx,%rsi
mov    %rax,%rdi
callq  400b1d <_ZSt3minIiERKT_S2_S2_>
mov    (%rax),%eax
cltq   
shl    $0x2,%rax
lea    -0x4(%rax),%rdx
mov    -0x18(%rbp),%rax
add    %rdx,%rax
mov    (%rax),%eax
cmp    -0x1c(%rbp),%eax
setl   %al
test   %al,%al
je     400946 <_Z10jumpSearchPiii+0xb0>
mov    -0x10(%rbp),%eax
mov    %eax,-0xc(%rbp)
mov    -0x20(%rbp),%eax
pxor   %xmm0,%xmm0
cvtsi2sd %eax,%xmm0
callq  400780 <sqrt@plt>
movapd %xmm0,%xmm1
mov    -0x10(%rbp),%eax
pxor   %xmm0,%xmm0
cvtsi2sd %eax,%xmm0
addsd  %xmm1,%xmm0
cvttsd2si %xmm0,%eax
mov    %eax,-0x10(%rbp)
mov    -0x20(%rbp),%eax
cmp    %eax,-0xc(%rbp)
jl     4008d5 <_Z10jumpSearchPiii+0x3f>
mov    $0xffffffff,%eax
jmp    4009b0 <_Z10jumpSearchPiii+0x11a>
mov    -0xc(%rbp),%eax
cltq   
lea    0x0(,%rax,4),%rdx
mov    -0x18(%rbp),%rax
add    %rdx,%rax
mov    (%rax),%eax
cmp    -0x1c(%rbp),%eax
jge    40098b <_Z10jumpSearchPiii+0xf5>
addl   $0x1,-0xc(%rbp)
lea    -0x20(%rbp),%rdx
lea    -0x10(%rbp),%rax
mov    %rdx,%rsi
mov    %rax,%rdi
callq  400b1d <_ZSt3minIiERKT_S2_S2_>
mov    (%rax),%eax
cmp    -0xc(%rbp),%eax
sete   %al
test   %al,%al
je     400946 <_Z10jumpSearchPiii+0xb0>
mov    $0xffffffff,%eax
jmp    4009b0 <_Z10jumpSearchPiii+0x11a>
mov    -0xc(%rbp),%eax
cltq   
lea    0x0(,%rax,4),%rdx
mov    -0x18(%rbp),%rax
add    %rdx,%rax
mov    (%rax),%eax
cmp    -0x1c(%rbp),%eax
jne    4009ab <_Z10jumpSearchPiii+0x115>
mov    -0xc(%rbp),%eax
jmp    4009b0 <_Z10jumpSearchPiii+0x11a>
mov    $0xffffffff,%eax
mov    -0x8(%rbp),%rcx
xor    %fs:0x28,%rcx
je     4009c4 <_Z10jumpSearchPiii+0x12e>
callq  400770 <__stack_chk_fail@plt>
leaveq 
retq   
<main>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
mov    %fs:0x28,%rax
mov    %rax,-0x8(%rbp)
xor    %eax,%eax
movl   $0x0,-0x50(%rbp)
movl   $0x1,-0x4c(%rbp)
movl   $0x1,-0x48(%rbp)
movl   $0x2,-0x44(%rbp)
movl   $0x3,-0x40(%rbp)
movl   $0x5,-0x3c(%rbp)
movl   $0x8,-0x38(%rbp)
movl   $0xd,-0x34(%rbp)
movl   $0x15,-0x30(%rbp)
movl   $0x22,-0x2c(%rbp)
movl   $0x37,-0x28(%rbp)
movl   $0x59,-0x24(%rbp)
movl   $0x90,-0x20(%rbp)
movl   $0xe9,-0x1c(%rbp)
movl   $0x179,-0x18(%rbp)
movl   $0x262,-0x14(%rbp)
movl   $0x37,-0x5c(%rbp)
mov    $0x10,%eax
mov    %eax,-0x58(%rbp)
mov    -0x58(%rbp),%edx
mov    -0x5c(%rbp),%ecx
lea    -0x50(%rbp),%rax
mov    %ecx,%esi
mov    %rax,%rdi
callq  400896 <_Z10jumpSearchPiii>
mov    %eax,-0x54(%rbp)
mov    $0x400bd4,%esi
mov    $0x601080,%edi
callq  400760 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
mov    %rax,%rdx
mov    -0x5c(%rbp),%eax
mov    %eax,%esi
mov    %rdx,%rdi
callq  400710 <_ZNSolsEi@plt>
mov    $0x400bdd,%esi
mov    %rax,%rdi
callq  400760 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
mov    %rax,%rdx
mov    -0x54(%rbp),%eax
mov    %eax,%esi
mov    %rdx,%rdi
callq  400710 <_ZNSolsEi@plt>
mov    $0x0,%eax
mov    -0x8(%rbp),%rcx
xor    %fs:0x28,%rcx
je     400ac8 <main+0x102>
callq  400770 <__stack_chk_fail@plt>
leaveq 
retq   
<_Z41__static_initialization_and_destruction_0ii>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %edi,-0x4(%rbp)
mov    %esi,-0x8(%rbp)
cmpl   $0x1,-0x4(%rbp)
jne    400b05 <_Z41__static_initialization_and_destruction_0ii+0x3b>
cmpl   $0xffff,-0x8(%rbp)
jne    400b05 <_Z41__static_initialization_and_destruction_0ii+0x3b>
mov    $0x601191,%edi
callq  400720 <_ZNSt8ios_base4InitC1Ev@plt>
mov    $0x601060,%edx
mov    $0x601191,%esi
mov    $0x400750,%edi
callq  400740 <__cxa_atexit@plt>
nop
leaveq 
retq   
<_GLOBAL__sub_I__Z10jumpSearchPiii>:
push   %rbp
mov    %rsp,%rbp
mov    $0xffff,%esi
mov    $0x1,%edi
callq  400aca <_Z41__static_initialization_and_destruction_0ii>
pop    %rbp
retq   
<_ZSt3minIiERKT_S2_S2_>:
push   %rbp
mov    %rsp,%rbp
mov    %rdi,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    -0x10(%rbp),%rax
mov    (%rax),%edx
mov    -0x8(%rbp),%rax
mov    (%rax),%eax
cmp    %eax,%edx
jge    400b3f <_ZSt3minIiERKT_S2_S2_+0x22>
mov    -0x10(%rbp),%rax
jmp    400b43 <_ZSt3minIiERKT_S2_S2_+0x26>
mov    -0x8(%rbp),%rax
pop    %rbp
retq   
nopw   %cs:0x0(%rax,%rax,1)
nop
<__libc_csu_init>:
push   %r15
push   %r14
mov    %edi,%r15d
push   %r13
push   %r12
lea    0x200286(%rip),%r12        
push   %rbp
lea    0x20028e(%rip),%rbp        
push   %rbx
mov    %rsi,%r14
mov    %rdx,%r13
sub    %r12,%rbp
sub    $0x8,%rsp
sar    $0x3,%rbp
callq  4006e0 <_init>
test   %rbp,%rbp
je     400ba6 <__libc_csu_init+0x56>
xor    %ebx,%ebx
nopl   0x0(%rax,%rax,1)
mov    %r13,%rdx
mov    %r14,%rsi
mov    %r15d,%edi
callq  *(%r12,%rbx,8)
add    $0x1,%rbx
cmp    %rbp,%rbx
jne    400b90 <__libc_csu_init+0x40>
add    $0x8,%rsp
pop    %rbx
pop    %rbp
pop    %r12
pop    %r13
pop    %r14
pop    %r15
retq   
nop
nopw   %cs:0x0(%rax,%rax,1)
<__libc_csu_fini>:
repz retq 
