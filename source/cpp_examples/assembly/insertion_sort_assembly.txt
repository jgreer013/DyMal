<_start>:
xor    %ebp,%ebp
mov    %rdx,%r9
pop    %rsi
mov    %rsp,%rdx
and    $0xfffffffffffffff0,%rsp
push   %rax
push   %rsp
mov    $0x4007e0,%r8
mov    $0x400770,%rcx
mov    $0x4006ee,%rdi
callq  4004c0 <__libc_start_main@plt>
hlt    
nopw   0x0(%rax,%rax,1)
<deregister_tm_clones>:
mov    $0x60104f,%eax
push   %rbp
sub    $0x601048,%rax
cmp    $0xe,%rax
mov    %rsp,%rbp
jbe    400540 <deregister_tm_clones+0x30>
mov    $0x0,%eax
test   %rax,%rax
je     400540 <deregister_tm_clones+0x30>
pop    %rbp
mov    $0x601048,%edi
jmpq   *%rax
nopw   0x0(%rax,%rax,1)
pop    %rbp
retq   
nopl   0x0(%rax)
nopw   %cs:0x0(%rax,%rax,1)
<register_tm_clones>:
mov    $0x601048,%esi
push   %rbp
sub    $0x601048,%rsi
sar    $0x3,%rsi
mov    %rsp,%rbp
mov    %rsi,%rax
shr    $0x3f,%rax
add    %rax,%rsi
sar    %rsi
je     400588 <register_tm_clones+0x38>
mov    $0x0,%eax
test   %rax,%rax
je     400588 <register_tm_clones+0x38>
pop    %rbp
mov    $0x601048,%edi
jmpq   *%rax
nopl   (%rax)
pop    %rbp
retq   
nopw   0x0(%rax,%rax,1)
<__do_global_dtors_aux>:
cmpb   $0x0,0x200ab1(%rip)        
jne    4005aa <__do_global_dtors_aux+0x1a>
push   %rbp
mov    %rsp,%rbp
callq  400510 <deregister_tm_clones>
pop    %rbp
movb   $0x1,0x200a9e(%rip)        
repz retq 
nopl   0x0(%rax)
<frame_dummy>:
mov    $0x600e20,%edi
cmpq   $0x0,(%rdi)
jne    4005c0 <frame_dummy+0x10>
jmp    400550 <register_tm_clones>
nopl   (%rax)
mov    $0x0,%eax
test   %rax,%rax
je     4005bb <frame_dummy+0xb>
push   %rbp
mov    %rsp,%rbp
callq  *%rax
pop    %rbp
jmpq   400550 <register_tm_clones>
<_Z13insertionSortPii>:
push   %rbp
mov    %rsp,%rbp
mov    %rdi,-0x18(%rbp)
mov    %esi,-0x1c(%rbp)
movl   $0x1,-0xc(%rbp)
mov    -0xc(%rbp),%eax
cmp    -0x1c(%rbp),%eax
jge    400693 <_Z13insertionSortPii+0xbd>
mov    -0xc(%rbp),%eax
cltq   
lea    0x0(,%rax,4),%rdx
mov    -0x18(%rbp),%rax
add    %rdx,%rax
mov    (%rax),%eax
mov    %eax,-0x4(%rbp)
mov    -0xc(%rbp),%eax
sub    $0x1,%eax
mov    %eax,-0x8(%rbp)
cmpl   $0x0,-0x8(%rbp)
js     40066d <_Z13insertionSortPii+0x97>
mov    -0x8(%rbp),%eax
cltq   
lea    0x0(,%rax,4),%rdx
mov    -0x18(%rbp),%rax
add    %rdx,%rax
mov    (%rax),%eax
cmp    -0x4(%rbp),%eax
jle    40066d <_Z13insertionSortPii+0x97>
mov    -0x8(%rbp),%eax
cltq   
add    $0x1,%rax
lea    0x0(,%rax,4),%rdx
mov    -0x18(%rbp),%rax
add    %rax,%rdx
mov    -0x8(%rbp),%eax
cltq   
lea    0x0(,%rax,4),%rcx
mov    -0x18(%rbp),%rax
add    %rcx,%rax
mov    (%rax),%eax
mov    %eax,(%rdx)
subl   $0x1,-0x8(%rbp)
jmp    400616 <_Z13insertionSortPii+0x40>
mov    -0x8(%rbp),%eax
cltq   
add    $0x1,%rax
lea    0x0(,%rax,4),%rdx
mov    -0x18(%rbp),%rax
add    %rax,%rdx
mov    -0x4(%rbp),%eax
mov    %eax,(%rdx)
addl   $0x1,-0xc(%rbp)
jmpq   4005e8 <_Z13insertionSortPii+0x12>
nop
pop    %rbp
retq   
<_Z10printArrayPii>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdi,-0x18(%rbp)
mov    %esi,-0x1c(%rbp)
movl   $0x0,-0x4(%rbp)
mov    -0x4(%rbp),%eax
cmp    -0x1c(%rbp),%eax
jge    4006e1 <_Z10printArrayPii+0x4b>
mov    -0x4(%rbp),%eax
cltq   
lea    0x0(,%rax,4),%rdx
mov    -0x18(%rbp),%rax
add    %rdx,%rax
mov    (%rax),%eax
mov    %eax,%esi
mov    $0x4007f4,%edi
mov    $0x0,%eax
callq  4004b0 <printf@plt>
addl   $0x1,-0x4(%rbp)
jmp    4006ac <_Z10printArrayPii+0x16>
mov    $0xa,%edi
callq  400490 <putchar@plt>
nop
leaveq 
retq   
<main>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %fs:0x28,%rax
mov    %rax,-0x8(%rbp)
xor    %eax,%eax
movl   $0xc,-0x20(%rbp)
movl   $0xb,-0x1c(%rbp)
movl   $0xd,-0x18(%rbp)
movl   $0x5,-0x14(%rbp)
movl   $0x6,-0x10(%rbp)
mov    $0x5,%eax
mov    %eax,-0x24(%rbp)
mov    -0x24(%rbp),%edx
lea    -0x20(%rbp),%rax
mov    %edx,%esi
mov    %rax,%rdi
callq  4005d6 <_Z13insertionSortPii>
mov    -0x24(%rbp),%edx
lea    -0x20(%rbp),%rax
mov    %edx,%esi
mov    %rax,%rdi
callq  400696 <_Z10printArrayPii>
mov    $0x0,%eax
mov    -0x8(%rbp),%rcx
xor    %fs:0x28,%rcx
je     40076b <main+0x7d>
callq  4004a0 <__stack_chk_fail@plt>
leaveq 
retq   
nopl   (%rax)
<__libc_csu_init>:
push   %r15
push   %r14
mov    %edi,%r15d
push   %r13
push   %r12
lea    0x20068e(%rip),%r12        
push   %rbp
lea    0x20068e(%rip),%rbp        
push   %rbx
mov    %rsi,%r14
mov    %rdx,%r13
sub    %r12,%rbp
sub    $0x8,%rsp
sar    $0x3,%rbp
callq  400460 <_init>
test   %rbp,%rbp
je     4007c6 <__libc_csu_init+0x56>
xor    %ebx,%ebx
nopl   0x0(%rax,%rax,1)
mov    %r13,%rdx
mov    %r14,%rsi
mov    %r15d,%edi
callq  *(%r12,%rbx,8)
add    $0x1,%rbx
cmp    %rbp,%rbx
jne    4007b0 <__libc_csu_init+0x40>
add    $0x8,%rsp
pop    %rbx
pop    %rbp
pop    %r12
pop    %r13
pop    %r14
pop    %r15
retq   
nop
nopw   %cs:0x0(%rax,%rax,1)
<__libc_csu_fini>:
repz retq 
